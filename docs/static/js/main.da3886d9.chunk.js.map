{"version":3,"sources":["types/types.js","auth/AuthContext.js","login/LoginScreen.js","data/Heroes.js","HeroCard.js","HeroList.js","selectors/getHeroesByPublisher.js","marvel/MarvelScreen.js","dc/DcScreen.js","heroes/HeroScreen.js","selectors/getHeroById.js","ui/NavBar.js","hooks/useForm.js","search/SearchScreen.js","selectors/getHeroByName.js","routes/DashBoardRoutes.js","routes/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["types","login","logout","AuthContext","createContext","require","LoginScreen","history","dispatch","useContext","className","onClick","console","log","action","type","payload","name","email","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","heroesList","useMemo","includes","Error","filter","heroe","getHeroesByPublisher","map","hero","key","MarvelScreen","DcScreen","HeroScreen","heroeId","useParams","find","length","goBack","replace","Navbar","activeClassName","exact","useForm","initialState","useState","values","setValues","clean","handleInputChange","target","value","SearchScreen","location","useLocation","queryString","parse","search","q","heroName","herofiltered","toLocaleLowerCase","h","getHeroByName","handleSearch","e","preventDefault","push","onSubmit","placeholder","onChange","DashBoardRoutes","path","component","AppRouter","authReducer","state","logged","HeroesApp","useReducer","JSON","localStorage","getItem","user","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da3886d9.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login:'[auth] login',\r\n    logout:'[auth] logout'\r\n}","const { createContext } = require(\"react\");\r\n\r\nexport const AuthContext = createContext();","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { types } from '../types/types';\r\n\r\nconst LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n    const handleClick = () =>{\r\n        console.log(\"click\")\r\n        const action = {\r\n          type:types.login,\r\n          payload:{\r\n            name:\"Angel\",\r\n            email: \"retana@gmail.com\"\r\n          }\r\n        }\r\n        dispatch(action);\r\n\r\n        // history.push(\"/\")\r\n        // history.replace('/') \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n          <h1>Login</h1>\r\n          <hr/>\r\n\r\n          <button\r\n            className='btn btn-outline-primary'\r\n            onClick={handleClick}\r\n          >\r\n              Login\r\n          </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginScreen;\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth:500}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img className=\"card-img\" src={`./assets/heroes/${id}.jpg`} alt={`${superhero}`}/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-title\">\r\n                            <h5>{superhero}</h5>\r\n                        </div>\r\n                        <div className=\"card-subtitle tgext-muted\">\r\n                            <p>{alter_ego}</p>\r\n                        </div>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                            && <p className=\"card-text\"> { characters } </p>\r\n                        }\r\n                        <p className=\"card-text\"> <small className=\"text-muted\"> {first_appearance} </small> </p>\r\n                        <Link to={`/hero/${id}`}>Mas...</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroCard;\r\n","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from './selectors/getHeroesByPublisher';\r\nimport HeroCard from './HeroCard';\r\n\r\n\r\nconst HeroList = ({publisher}) => {\r\n    // const heroesList = getHeroesByPublisher(publisher)\r\n    const heroesList = useMemo(() => getHeroesByPublisher(publisher), [ publisher ])\r\n    return (\r\n        <>\r\n           <div className=\"card-columns animate__animated animate__fadeIn\">\r\n               {\r\n                   heroesList.map( hero =>(\r\n                       <HeroCard \r\n                            key={hero.id}\r\n                            {...hero}>\r\n                       </HeroCard>\r\n                   ))\r\n               }\r\n           </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default HeroList;\r\n","import { heroes } from '../data/Heroes'\r\n\r\nexport const getHeroesByPublisher = (publisher) =>{\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics']\r\n\r\n    if( !validPublishers.includes(publisher) ){\r\n        throw new Error(`Publisher \"${publisher}\" no existe`);\r\n    }\r\n\r\n    return heroes.filter(heroe => heroe.publisher === publisher)\r\n}","import React from 'react';\r\nimport HeroList from '../HeroList';\r\n\r\nconst MarvelScreen = () => {\r\n    \r\n    return (\r\n        <>\r\n            <h1>MarvelScreen</h1>\r\n            <HeroList publisher={'Marvel Comics'}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MarvelScreen;\r\n","import React from 'react';\r\nimport HeroList from '../HeroList';\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <>\r\n            <h1>DC Screen</h1>\r\n            <HeroList publisher='DC Comics'/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DcScreen;\r\n","import React, { useMemo } from 'react';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { getHeroById } from '../selectors/getHeroById';\r\n\r\nconst HeroScreen = ({history}) => {\r\n    const {heroeId} = useParams()\r\n    // const heroe = getHeroById(heroeId)\r\n    const heroe = useMemo(() => getHeroById(heroeId),[heroeId])\r\n\r\n    if (!heroe){\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    const handleReturn = () =>{\r\n        if(history.length >= 2){\r\n            history.goBack()\r\n        }else{\r\n            (publisher === \"DC Comics\")\r\n            ? history.replace(\"/dc\")\r\n            : history.replace(\"/marvel\")\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    }= heroe\r\n    console.log(\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters)\r\n    return (\r\n        <div>\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-4\">\r\n                    <img className=\"img-thumbnail animate__animated animate__fadeInUp\" style={{maxWidth:230}} src={`../assets/heroes/${heroeId}.jpg`} alt={alter_ego}/>\r\n                </div>\r\n                <div className=\"col-8 container animate__animated animate__slideInRight\">\r\n                    <h3>{superhero}</h3>\r\n                    <ul className=\"list-group list-group-flush \">\r\n                        <li className=\"list-group-item\"><b>Nombre: </b>{alter_ego}</li>\r\n                        <li className=\"list-group-item\"><b>Publisher: </b>{publisher}</li>\r\n                        <li className=\"list-group-item\"><b>First appearance </b>{first_appearance}</li>\r\n                    </ul>\r\n                    <h5> Characters </h5>\r\n                    <p> { characters } </p>\r\n\r\n                    <button \r\n                        className=\"btn btn-outline-info\"\r\n                        onClick={handleReturn}\r\n                        >\r\n                        Return\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeroScreen;\r\n","import { heroes } from '../data/Heroes'\r\n\r\nexport const getHeroById = (id) =>{\r\n\r\n    return heroes.find(heroe => heroe.id === id)\r\n}","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/login\"\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\n\r\nconst useForm = (initialState={}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const clean = () =>{\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n\r\n    return [values,handleInputChange,clean]\r\n\r\n}\r\n\r\n\r\n\r\nexport default useForm;\r\n","import React, { useMemo } from 'react';\r\nimport HeroCard from '../HeroCard';\r\n// import {heroes} from '../data/Heroes';\r\nimport useForm from '../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport { getHeroByName } from '../selectors/getHeroByName';\r\n// import { getHeroById } from '../selectors/getHeroById';\r\n\r\nconst SearchScreen = ({history}) => {\r\n\r\n    const location = useLocation()\r\n    const { q = '' } = queryString.parse(location.search)\r\n    // const [hero, setHero] = useState([]);\r\n    const [values,handleInputChange] = useForm({\r\n        heroName:q\r\n    });\r\n    \r\n    const {heroName} = values\r\n    \r\n    const herofiltered = useMemo(() => getHeroByName(q), [q]);\r\n    \r\n    const handleSearch = (e) =>{\r\n        // const hero = getHeroById(name)\r\n        e.preventDefault()\r\n        history.push(`?q=${heroName}`)\r\n        // setHero([hero])\r\n    }\r\n    \r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-5\">\r\n                <h4>Hero searcher</h4>\r\n                <hr/>\r\n\r\n                <form onSubmit={handleSearch}>\r\n                   \r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"heroName\"\r\n                        value={heroName}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary mt-2 btn-block\"\r\n                        onClick={handleSearch}\r\n                    >\r\n                        Search...\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"col-7\">\r\n                <h4>Results</h4>\r\n                <hr/>\r\n                {(q === '' && <div className=\"alert alert-primary\"> Search a hero </div>)}\r\n                {\r\n                    (typeof herofiltered === \"object\")\r\n                        ? ( herofiltered.map( hero => (\r\n                            <HeroCard \r\n                            key={hero.id}\r\n                              {...hero}\r\n                            />\r\n                        )))\r\n                        :<div className=\"alert alert-danger\"> {herofiltered} </div>\r\n                }\r\n               \r\n\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchScreen;\r\n","import { heroes } from \"../data/Heroes\"\r\n\r\nexport const getHeroByName = (name = '') =>{\r\n\r\n    name = name.toLocaleLowerCase();\r\n    if (name === ''){\r\n        return []\r\n    }\r\n\r\n    const h = ( heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name)))\r\n    if (h.length > 0){\r\n        return h\r\n    }else{\r\n        return \"Hero not found\"\r\n    }\r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport MarvelScreen from '../marvel/MarvelScreen';\r\nimport DcScreen from '../dc/DcScreen';\r\nimport HeroScreen from '../heroes/HeroScreen';\r\nimport { Navbar } from '../ui/NavBar';\r\nimport SearchScreen from '../search/SearchScreen';\r\n\r\nconst DashBoardRoutes = () => {\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n            <div className='container mt-2'>\r\n                <Switch>\r\n                    <Route exact path='/marvel' component={MarvelScreen}/>\r\n                    <Route exact path='/dc' component={DcScreen}/>\r\n                    <Route exact path='/hero/:heroeId' component={HeroScreen}/>\r\n                    <Route exact path='/search' component={SearchScreen}/>\r\n\r\n                    <Redirect to='/marvel' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DashBoardRoutes;\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport LoginScreen from '../login/LoginScreen';\r\nimport DashBoardRoutes from './DashBoardRoutes';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n          \r\n        <div>\r\n          <Switch>\r\n              <Route exact path='/login' component={LoginScreen}/>\r\n\r\n              \r\n              \r\n              <Route path='/' component={DashBoardRoutes}/>\r\n\r\n\r\n          </Switch>\r\n        </div>\r\n\r\n      </Router>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","const { types } = require(\"../types/types\");\r\n\r\n\r\nexport const authReducer = ( state={}, action ) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: true\r\n            }          \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer } from 'react';\r\nimport AppRouter from './routes/AppRouter';\r\nimport {AuthContext} from './auth/AuthContext';\r\nimport {authReducer} from './auth/authReducer';\r\n\r\nconst HeroesApp = () => {\r\n\r\n  const init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || {logged:false}\r\n  }\r\n\r\n  const [user,dispatch] = useReducer(authReducer,{},init)\r\n    return (\r\n        <AuthContext.Provider value={{user,dispatch}}>\r\n          <AppRouter/>\r\n        </AuthContext.Provider >\r\n    );\r\n}\r\n\r\nexport default HeroesApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport HeroesApp from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp/>,\n  document.getElementById('root') \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}